import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';

import { FormModule } from 'material/form';
import { TableModule } from 'material/table';
import {
  ConfirmationService,
  MessageService,
} from 'primeng/api';
import { ButtonModule } from 'primeng/button';
import { ConfirmDialogModule } from 'primeng/confirmdialog';
import { MessageModule } from 'primeng/message';
import { ToastModule } from 'primeng/toast';
import { ToolbarModule } from 'primeng/toolbar';
import { TooltipModule } from 'primeng/tooltip';

import { Create<%- classname %>Component } from './create-<%- name %>/';
import { Delete<%- classname %>Component } from './delete-<%- name %>/';
import { <%- classname %>Component } from './<%- name %>.component';
import { <%- classname %>Service } from './<%- name %>.service';
import { Update<%- classname %>Component } from './update-<%- name %>/';
import { View<%- classname %>Component } from './view-<%- name %>';


<% for(const o of options.Relations || []) { %> 

import { <%- o.target %>Service } from '../<%- o.name %>';

<% } %>

@NgModule({
  declarations: [
    <%- classname %>Component,
    Create<%- classname %>Component,
    Update<%- classname %>Component,
    Delete<%- classname %>Component,
    View<%- classname %>Component,
  ],
  imports: [
    CommonModule,
    TableModule,
    FormModule,
    ToolbarModule,
    ButtonModule,
    TooltipModule,
    ConfirmDialogModule,
    MessageModule,
    ToastModule,
    RouterModule.forChild([
      {
        path: '',
        component: <%- classname %>Component,
        children: [
          {
            title: 'View <%- classname %>',
            path: '',
            component: View<%- classname %>Component,
          },
          {
            title: 'Create <%- classname %>',
            path: 'create',
            component: Create<%- classname %>Component,
          },
          {
            title: 'Update <%- classname %>',
            path: 'update',
            component: Update<%- classname %>Component,
          },
          {
            title: 'Delete <%- classname %>',
            path: 'delete',
            component: Delete<%- classname %>Component,
          },
        ],
      },
    ]),
  ],
  providers: [
    <%- classname %>Service, 
    <% for(const o of options.Relations || []) { %> <%- o.target %>Service, <% } %>
    ConfirmationService, 
    MessageService],
})
export class <%- classname %>Module {}

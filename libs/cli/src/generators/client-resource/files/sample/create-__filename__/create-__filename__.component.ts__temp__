import {
  Component,
  Input,
  OnInit,
} from '@angular/core';
import {
  FormControl,
  FormGroup,
} from '@angular/forms';

import { FormManager } from 'material/form/form-builder';
import { InputAttributes } from 'material/form/shared-input';

import { <%= classname %>FormService } from '../<%= filename %>-form.service';
import { <%= classname %> } from '../<%= filename %>.interface';
import { <%= classname %>Service } from '../<%= filename %>.service';

@Component({
  selector: 'ae-create-<%= filename %>',
  templateUrl: './create-<%= filename %>.component.html',
  styleUrls: ['./create-<%= filename %>.component.scss'],
})
export class Create<%= classname %>Component implements OnInit {
  @Input() submitLabel = 'Save <%= classname %>';
  @Input() defaultValue!: any;

  formGroup!: FormGroup;
  formFields!: Partial<Record<keyof <%= classname %>, InputAttributes>>;

  constructor(
    private readonly <%= filename %>Service: <%= classname %>Service,
    private readonly <%= filename %>FormService: <%= classname %>FormService
  ) {}

  formBuilder!: FormManager<<%= classname %>>;

  ngOnInit(): void {
    this.formGroup = this.<%= filename %>FormService.createForm();
    this.formFields = this.<%= filename %>FormService.createFormFields();
  }

  control(name: string) {
    return this.formGroup.get(name) as FormControl;
  }

  onSubmit(formValue: <%= classname %>) {
    this.<%= filename %>Service.add({ ...formValue });
  }

  field(name: keyof <%= classname %>) {
    return this.formFields[name];
  }
}

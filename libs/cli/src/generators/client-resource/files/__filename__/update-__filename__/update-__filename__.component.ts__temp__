import {
  Component,
  OnInit,
} from '@angular/core';
import {
  FormControl,
  FormGroup,
} from '@angular/forms';
import { ActivatedRoute } from '@angular/router';

import { InputAttributes } from 'material/form/shared-input';
import {
  map,
  Observable,
  switchMap,
} from 'rxjs';

import { <%= classname %>FormService } from '../<%= filename %>-form.service';
import { <%= classname %> } from '../<%= filename %>.interface';
import { <%= classname %>Service } from '../<%= filename %>.service';

@Component({
  selector: 'ae-update-<%= filename %>',
  templateUrl: './update-<%= filename %>.component.html',
  styleUrls: ['./update-<%= filename %>.component.scss'],
})
export class Update<%= classname %>Component implements OnInit {
  item$!: Observable<Partial<<%= classname %>>>;

  submitLabel = 'Update <%= classname %>';
  formGroup!: FormGroup;
  formFields!: Partial<Record<keyof <%= classname %>, InputAttributes>>;

  constructor(
    private readonly <%= filename %>Service: <%= classname %>Service,
    private readonly route: ActivatedRoute,
    private readonly <%= filename %>FormService: <%= classname %>FormService
  ) {}

  ngOnInit(): void {
    this.formGroup = this.<%= filename %>FormService.updateForm();
    this.formFields = this.<%= filename %>FormService.updateFormFields();

    this.item$ = this.route.paramMap.pipe(
      switchMap((param) => this.<%= filename %>Service.getByKey(param.get('id'))),
      map((data) => data)
    );
  }

  control(name: string) {
    return this.formGroup.get(name) as FormControl;
  }

  field(name: keyof <%= classname %>) {
    return this.formFields[name];
  }

  update(formValue: Partial<<%= classname %>>, id: number) {
    this.<%= filename %>Service.update({ id, ...formValue });
    this.formGroup.reset();
  }
}

import {
  DataSource,
  ViewColumn,
  ViewEntity,
} from 'typeorm';

import { <%= classname %> } from './<%= filename %>.entity';

@ViewEntity({
  expression: (ds: DataSource) => {
    return ds
      .createQueryBuilder()
      .select('<%= filename %>.id', 'id')
      .addSelect('<%= filename %>.uuid', 'uuid')


        <% for(const c of viewColumns) { %> 
  
  
              <% if(c.from) { %> 
                    .addSelect('<%= c.from %>.<%- c.mainProperty %>', '<%- c.name %>' )
              <% } %>

              <% if(!c.from) { %> 
                    .addSelect('<%= filename %>.<%- c.name %>', '<%- c.name %>' )
              <% } %>


        <% } %>
      
      .from(<%= classname %>, '<%= filename %>')

      <% for(const c of viewColumns) { %> 
      
            <% if(c.from) { %> 
                .leftJoin('<%= c.from %>', '<%- c.from %>' )
            <% } %>

      <% } %>
  },
})
export class <%= classname %>View {
  @ViewColumn() id: number;
  @ViewColumn() uuid: number;

  <% for(const c of viewColumns) { %>     
    @ViewColumn() <%- c.name %>: <%- c.valueType() %> ; 
  <% } %>
  


}
